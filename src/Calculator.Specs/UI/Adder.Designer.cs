// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Calculator.Specs.UI.AdderClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class Adder
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uIELeftEdit = this.UIAdderWindow.UIItem0Window.UIELeftEdit;
            WinEdit uIERightEdit = this.UIAdderWindow.UIItem0Window1.UIERightEdit;
            WinButton uIAddButton = this.UIAdderWindow.UIAddWindow.UIAddButton;
            #endregion

            // Type '1' in 'eLeft' text box
            uIELeftEdit.Text = this.RecordedMethod1Params.UIELeftEditText;

            // Type '{Tab}' in 'eLeft' text box
            Keyboard.SendKeys(uIELeftEdit, this.RecordedMethod1Params.UIELeftEditSendKeys, ModifierKeys.None);

            // Type '2' in 'eRight' text box
            uIERightEdit.Text = this.RecordedMethod1Params.UIERightEditText;

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(51, 10));

            // Type 'Control, Shift + i' in 'Add' button
            Keyboard.SendKeys(uIAddButton, this.RecordedMethod1Params.UIAddButtonSendKeys, (ModifierKeys.Control | ModifierKeys.Shift));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIAdderWindow UIAdderWindow
        {
            get
            {
                if ((this.mUIAdderWindow == null))
                {
                    this.mUIAdderWindow = new UIAdderWindow();
                }
                return this.mUIAdderWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIAdderWindow mUIAdderWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'eLeft' text box
        /// </summary>
        public string UIELeftEditText = "1";
        
        /// <summary>
        /// Type '{Tab}' in 'eLeft' text box
        /// </summary>
        public string UIELeftEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '2' in 'eRight' text box
        /// </summary>
        public string UIERightEditText = "2";
        
        /// <summary>
        /// Type 'Control, Shift + i' in 'Add' button
        /// </summary>
        public string UIAddButtonSendKeys = "i";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAdderWindow : WinWindow
    {
        
        public UIAdderWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Adder";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Adder");
            #endregion
        }
        
        #region Properties
        public UIItem0Window UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new UIItem0Window(this);
                }
                return this.mUIItem0Window;
            }
        }
        
        public UIItem0Window1 UIItem0Window1
        {
            get
            {
                if ((this.mUIItem0Window1 == null))
                {
                    this.mUIItem0Window1 = new UIItem0Window1(this);
                }
                return this.mUIItem0Window1;
            }
        }
        
        public UIAddWindow UIAddWindow
        {
            get
            {
                if ((this.mUIAddWindow == null))
                {
                    this.mUIAddWindow = new UIAddWindow(this);
                }
                return this.mUIAddWindow;
            }
        }
        
        public UIItem3Window UIItem3Window
        {
            get
            {
                if ((this.mUIItem3Window == null))
                {
                    this.mUIItem3Window = new UIItem3Window(this);
                }
                return this.mUIItem3Window;
            }
        }
        #endregion
        
        #region Fields
        private UIItem0Window mUIItem0Window;
        
        private UIItem0Window1 mUIItem0Window1;
        
        private UIAddWindow mUIAddWindow;
        
        private UIItem3Window mUIItem3Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItem0Window : WinWindow
    {
        
        public UIItem0Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "eLeft";
            this.WindowTitles.Add("Adder");
            #endregion
        }
        
        #region Properties
        public WinEdit UIELeftEdit
        {
            get
            {
                if ((this.mUIELeftEdit == null))
                {
                    this.mUIELeftEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIELeftEdit.WindowTitles.Add("Adder");
                    #endregion
                }
                return this.mUIELeftEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIELeftEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItem0Window1 : WinWindow
    {
        
        public UIItem0Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "eRight";
            this.WindowTitles.Add("Adder");
            #endregion
        }
        
        #region Properties
        public WinEdit UIERightEdit
        {
            get
            {
                if ((this.mUIERightEdit == null))
                {
                    this.mUIERightEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIERightEdit.WindowTitles.Add("Adder");
                    #endregion
                }
                return this.mUIERightEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIERightEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddWindow : WinWindow
    {
        
        public UIAddWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAdd";
            this.WindowTitles.Add("Adder");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Adder");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItem3Window : WinWindow
    {
        
        public UIItem3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lbResult";
            this.WindowTitles.Add("Adder");
            #endregion
        }
        
        #region Properties
        public WinText UIItem3Text
        {
            get
            {
                if ((this.mUIItem3Text == null))
                {
                    this.mUIItem3Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem3Text.SearchProperties[WinText.PropertyNames.Name] = "3";
                    this.mUIItem3Text.WindowTitles.Add("Adder");
                    #endregion
                }
                return this.mUIItem3Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem3Text;
        #endregion
    }
}
